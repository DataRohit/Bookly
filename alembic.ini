# Alembic configuration for managing database migrations.

[alembic]
# Path to migration scripts (use forward slashes for cross-platform compatibility)
script_location = migrations

# Customize the naming convention for migration files
# Uncomment to prepend filenames with date and time
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Specify a directory to prepend to sys.path (default: current directory)
prepend_sys_path = .

# Timezone for rendering timestamps in migration files (Python 3.9+)
# timezone =

# Max length for the "slug" field in file names (default: 40 characters)
# truncate_slug_length = 40

# Automatically run environment during 'revision' command if set to true
# revision_environment = false

# Allow detection of .pyc/.pyo files as revisions if no .py exists
# sourceless = false

# Specify location(s) for version files (default: migrations/versions)
# version_locations = %(here)s/foo:%(here)s/bar:migrations/versions

# Use OS-specific path separator for version_locations (default: os.pathsep)
version_path_separator = os

# Search for source files recursively in version locations (Alembic 1.10+)
# recursive_version_locations = false

# Encoding for output files (default: utf-8)
# output_encoding = utf-8

# Database connection string
sqlalchemy.url = postgresql://%(POSTGRES_USER)s:%(POSTGRES_PASSWORD)s@%(POSTGRES_HOST)s/%(POSTGRES_DB)s


[post_write_hooks]
# Hooks to run after generating new revision scripts

# Format with 'black' (code formatter)
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Lint and auto-fix with 'ruff' (code linter)
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME


# Logging configuration
[loggers]
keys = root, sqlalchemy, alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_sqlalchemy]
level = WARN
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
